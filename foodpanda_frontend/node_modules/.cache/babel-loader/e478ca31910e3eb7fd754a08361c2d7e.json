{"ast":null,"code":"var _jsxFileName = \"D:\\\\facultate\\\\an 3\\\\sem 2 - UPM\\\\SD - UTCN\\\\assignments\\\\assignment2\\\\foodpanda_frontend\\\\src\\\\components\\\\AddRestaurantPage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport \"./../css/AddRestaurantPage.css\";\nimport HeaderAdmin from \"./HeaderAdmin\";\nimport { useState } from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport DeliveryZone from './DeliveryZone';\nimport Popup from \"./Popup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddRestaurantPage = () => {\n  _s();\n\n  const {\n    state\n  } = useLocation();\n  const admin = state.admin;\n  const zones = state.zones;\n  console.log(zones);\n  const [name, setName] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [popup, setPopup] = useState({\n    active: false,\n    title: \"\",\n    message: \"\"\n  });\n  const [deliveryZonesStrings, setDeliveryZonesStrings] = useState([]);\n\n  const validateInputSignUp = async () => {\n    if (!name) {\n      setPopup({\n        active: true,\n        title: \"Oops!\",\n        message: \"Name can't be empty\"\n      });\n      return false;\n    }\n\n    if (!location) {\n      setPopup({\n        active: true,\n        title: \"Oops!\",\n        message: \"Location can't be empty\"\n      });\n      return false;\n    }\n\n    return true;\n  };\n\n  const addRestaurant = async restaurant => {\n    document.getElementById('zones').onclick = function () {\n      var checkboxes = document.querySelectorAll('input[type=\"checkbox\"]:checked');\n\n      for (var checkbox of checkboxes) {\n        // document.body.append(checkbox.value + ' ');\n        restaurant.deliveryZonesStrings.push(checkbox.value);\n      }\n    };\n\n    console.log(restaurant); // const response = await fetch(`http://localhost:8080/foodpanda/restaurants`, {\n    //     method: \"POST\",\n    //     headers: {\n    //         \"Content-type\": \"application/json\"\n    //     },\n    //     body: JSON.stringify(restaurant)\n    // })\n    // const data = await response.json()\n    // if(data.success === true) {\n    //     setPopup({active: true, title: \"Yaay!\", \n    //             message: data.message})\n    // }\n    // else \n    //     setPopup({active: true, title: \"Oops!\", \n    //             message: data.message})\n  };\n\n  const onAddRestaurantClick = async e => {\n    e.preventDefault();\n    let notEmpty = await validateInputSignUp();\n\n    if (notEmpty) {\n      addRestaurant({\n        \"name\": name,\n        \"location\": location,\n        \"deliveryZonesStrings\": deliveryZonesStrings,\n        \"adminUsername\": admin.username\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-restaurant-page\",\n    children: [/*#__PURE__*/_jsxDEV(HeaderAdmin, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-restaurant-texts\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Add the restaurant you will manage:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"add-restaurant-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"restaurant-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"restaurant-data-label\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"restaurant-data-input\",\n          type: \"text\",\n          placeholder: \"Name\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"restaurant-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"restaurant-data-label\",\n          children: \"Location:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"restaurant-data-input\",\n          type: \"text\",\n          placeholder: \"Location\",\n          value: location,\n          onChange: e => setLocation(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"zones-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"restaurant-data-label\",\n          children: \"Delivery Zones:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), zones.map(zone => /*#__PURE__*/_jsxDEV(DeliveryZone, {\n          zoneName: zone,\n          handleCheck: handleCheck\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        id: \"btn-add-restaurant\",\n        type: \"submit\",\n        onClick: e => onAddRestaurantClick(e),\n        children: \"Add Restaurant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      trigger: popup.active,\n      setPopup: setPopup,\n      title: popup.title,\n      message: popup.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddRestaurantPage, \"ooQqH9sN9/TWRU7uU+mGl1lV7PA=\", false, function () {\n  return [useLocation];\n});\n\n_c = AddRestaurantPage;\nexport default AddRestaurantPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRestaurantPage\");","map":{"version":3,"sources":["D:/facultate/an 3/sem 2 - UPM/SD - UTCN/assignments/assignment2/foodpanda_frontend/src/components/AddRestaurantPage.js"],"names":["React","HeaderAdmin","useState","useLocation","DeliveryZone","Popup","AddRestaurantPage","state","admin","zones","console","log","name","setName","location","setLocation","popup","setPopup","active","title","message","deliveryZonesStrings","setDeliveryZonesStrings","validateInputSignUp","addRestaurant","restaurant","document","getElementById","onclick","checkboxes","querySelectorAll","checkbox","push","value","onAddRestaurantClick","e","preventDefault","notEmpty","username","target","map","zone","handleCheck"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport \"./../css/AddRestaurantPage.css\"; \r\nimport HeaderAdmin from \"./HeaderAdmin\";\r\nimport { useState } from 'react'\r\nimport {useLocation} from \"react-router-dom\"\r\nimport DeliveryZone from './DeliveryZone';\r\nimport Popup from \"./Popup\";\r\n\r\nconst AddRestaurantPage = () => {\r\n    const {state} = useLocation()\r\n    const admin = state.admin\r\n    const zones = state.zones\r\n    console.log(zones)\r\n    const [name, setName] = useState(\"\")\r\n    const [location, setLocation] = useState(\"\")\r\n    const [popup, setPopup] = useState({active: false, title: \"\", message: \"\"});\r\n    const [deliveryZonesStrings, setDeliveryZonesStrings] = useState([])\r\n\r\n    const validateInputSignUp = async () => {\r\n        if(!name) {\r\n            setPopup({active: true, title: \"Oops!\", \r\n                message: \"Name can't be empty\"})\r\n            return false\r\n        }\r\n        if(!location) {\r\n            setPopup({active: true, title: \"Oops!\", \r\n                message: \"Location can't be empty\"})\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n\r\n    const addRestaurant = async(restaurant) => {\r\n\r\n        document.getElementById('zones').onclick = function() {\r\n            var checkboxes = document.querySelectorAll('input[type=\"checkbox\"]:checked');\r\n            for (var checkbox of checkboxes) {\r\n                // document.body.append(checkbox.value + ' ');\r\n                restaurant.deliveryZonesStrings.push(checkbox.value)\r\n            }\r\n        }\r\n        console.log(restaurant)\r\n        // const response = await fetch(`http://localhost:8080/foodpanda/restaurants`, {\r\n        //     method: \"POST\",\r\n        //     headers: {\r\n        //         \"Content-type\": \"application/json\"\r\n        //     },\r\n        //     body: JSON.stringify(restaurant)\r\n        // })\r\n        \r\n        // const data = await response.json()\r\n        // if(data.success === true) {\r\n        //     setPopup({active: true, title: \"Yaay!\", \r\n        //             message: data.message})\r\n        // }\r\n        // else \r\n        //     setPopup({active: true, title: \"Oops!\", \r\n        //             message: data.message})\r\n    }\r\n\r\n    const onAddRestaurantClick = async (e) => {\r\n        e.preventDefault()\r\n        \r\n        let notEmpty = await validateInputSignUp()\r\n        if (notEmpty) { \r\n            addRestaurant({\"name\":name, \"location\":location, \"deliveryZonesStrings\":deliveryZonesStrings, \"adminUsername\":admin.username})\r\n        }    \r\n    }\r\n\r\n    return (\r\n        <div className=\"add-restaurant-page\">\r\n            <HeaderAdmin/>\r\n            <div className='add-restaurant-texts'>\r\n                <p>Add the restaurant you will manage:</p>\r\n            </div>\r\n            <form className=\"add-restaurant-form\">\r\n                <div className=\"restaurant-data\">\r\n                    <label className=\"restaurant-data-label\">Name:</label>\r\n                    <input\r\n                        className=\"restaurant-data-input\" \r\n                        type=\"text\" \r\n                        placeholder=\"Name\"\r\n                        value={name} \r\n                        onChange={(e) => setName(e.target.value)} \r\n                    />\r\n                </div>\r\n                <div className=\"restaurant-data\">\r\n                    <label className=\"restaurant-data-label\">Location:</label>\r\n                    <input\r\n                    className=\"restaurant-data-input\" \r\n                        type=\"text\" \r\n                        placeholder=\"Location\"\r\n                        value={location} \r\n                        onChange={(e) => setLocation(e.target.value)} \r\n                    />\r\n                </div>\r\n\r\n                <div className='zones-list'>\r\n                    <br></br>\r\n                    <label className='restaurant-data-label'>Delivery Zones:</label>\r\n                    <br></br>\r\n                    {zones.map((zone) => (\r\n                        <DeliveryZone\r\n                            zoneName={zone}\r\n                            handleCheck={handleCheck}\r\n                        />\r\n                    ))}\r\n                </div>\r\n                <button \r\n                    className='btn' \r\n                    id='btn-add-restaurant' \r\n                    type='submit'\r\n                    onClick={(e) => onAddRestaurantClick(e)}\r\n                >\r\n                    Add Restaurant        \r\n                </button> \r\n            </form>\r\n            <Popup \r\n                trigger={popup.active}\r\n                setPopup={setPopup}\r\n                title={popup.title}\r\n                message={popup.message}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddRestaurantPage"]},"metadata":{},"sourceType":"module"}