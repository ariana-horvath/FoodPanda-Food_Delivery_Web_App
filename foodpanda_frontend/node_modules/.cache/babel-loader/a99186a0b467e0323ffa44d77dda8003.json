{"ast":null,"code":"var _jsxFileName = \"D:\\\\facultate\\\\an 3\\\\sem 2 - UPM\\\\SD - UTCN\\\\assignments\\\\assignment2\\\\foodpanda_frontend\\\\src\\\\components\\\\AddRestaurantPage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport \"./../css/AddRestaurantPage.css\";\nimport HeaderAdmin from \"./HeaderAdmin\";\nimport { useState } from 'react';\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport DeliveryZone from './DeliveryZone';\nimport Popup from \"./Popup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddRestaurantPage = () => {\n  _s();\n\n  const {\n    state\n  } = useLocation();\n  const admin = state.admin;\n  const zones = state.zones;\n  const [name, setName] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [popup, setPopup] = useState({\n    active: false,\n    title: \"\",\n    message: \"\"\n  });\n  const [deliveryZonesStrings, setDeliveryZonesStrings] = useState([]);\n  const navigate = useNavigate();\n\n  const validateInputSignUp = async () => {\n    if (!name) {\n      setPopup({\n        active: true,\n        title: \"Oops!\",\n        message: \"Name can't be empty\"\n      });\n      return false;\n    }\n\n    if (!location) {\n      setPopup({\n        active: true,\n        title: \"Oops!\",\n        message: \"Location can't be empty\"\n      });\n      return false;\n    }\n\n    return true;\n  };\n\n  const addRestaurant = async restaurant => {\n    console.log(restaurant);\n    const response = await fetch(`http://localhost:8080/foodpanda/restaurants`, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(restaurant)\n    });\n    const data = await response.json();\n\n    if (data.success === true) {\n      setPopup({\n        active: true,\n        title: \"Yaay!\",\n        message: data.message\n      });\n      navigate('/admin/main-page', {\n        state: {\n          admin: admin,\n          restaurant: restaurant\n        }\n      });\n    } else setPopup({\n      active: true,\n      title: \"Oops!\",\n      message: data.message\n    });\n  };\n\n  const onAddRestaurantClick = async e => {\n    e.preventDefault();\n    let notEmpty = await validateInputSignUp();\n\n    if (notEmpty) {\n      var checkboxes = document.querySelectorAll('input[type=checkbox]:checked');\n\n      for (var i = 0; i < checkboxes.length; i++) {\n        deliveryZonesStrings.push(checkboxes[i].value);\n      }\n\n      addRestaurant({\n        \"name\": name,\n        \"location\": location,\n        \"deliveryZonesStrings\": deliveryZonesStrings,\n        \"adminUsername\": admin.username\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-restaurant-page\",\n    children: [/*#__PURE__*/_jsxDEV(HeaderAdmin, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-restaurant-texts\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Add the restaurant you will manage:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"add-restaurant-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"restaurant-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"restaurant-data-label\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"restaurant-data-input\",\n          type: \"text\",\n          placeholder: \"Name\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"restaurant-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"restaurant-data-label\",\n          children: \"Location:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"restaurant-data-input\",\n          type: \"text\",\n          placeholder: \"Location\",\n          value: location,\n          onChange: e => setLocation(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"zones-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"restaurant-data-label\",\n          children: \"Delivery Zones:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), zones.map(zone => /*#__PURE__*/_jsxDEV(DeliveryZone, {\n          zoneName: zone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        id: \"btn-add-restaurant\",\n        type: \"submit\",\n        onClick: e => onAddRestaurantClick(e),\n        children: \"Add Restaurant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      trigger: popup.active,\n      setPopup: setPopup,\n      title: popup.title,\n      message: popup.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddRestaurantPage, \"rq6lmHLMUlRNmxX5ynOtB4lXYEo=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = AddRestaurantPage;\nexport default AddRestaurantPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRestaurantPage\");","map":{"version":3,"sources":["D:/facultate/an 3/sem 2 - UPM/SD - UTCN/assignments/assignment2/foodpanda_frontend/src/components/AddRestaurantPage.js"],"names":["React","HeaderAdmin","useState","useLocation","useNavigate","DeliveryZone","Popup","AddRestaurantPage","state","admin","zones","name","setName","location","setLocation","popup","setPopup","active","title","message","deliveryZonesStrings","setDeliveryZonesStrings","navigate","validateInputSignUp","addRestaurant","restaurant","console","log","response","fetch","method","headers","body","JSON","stringify","data","json","success","onAddRestaurantClick","e","preventDefault","notEmpty","checkboxes","document","querySelectorAll","i","length","push","value","username","target","map","zone"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport \"./../css/AddRestaurantPage.css\"; \r\nimport HeaderAdmin from \"./HeaderAdmin\";\r\nimport { useState } from 'react'\r\nimport {useLocation, useNavigate} from \"react-router-dom\"\r\nimport DeliveryZone from './DeliveryZone';\r\nimport Popup from \"./Popup\";\r\n\r\nconst AddRestaurantPage = () => {\r\n    const {state} = useLocation()\r\n    const admin = state.admin\r\n    const zones = state.zones\r\n    const [name, setName] = useState(\"\")\r\n    const [location, setLocation] = useState(\"\")\r\n    const [popup, setPopup] = useState({active: false, title: \"\", message: \"\"});\r\n    const [deliveryZonesStrings, setDeliveryZonesStrings] = useState([])\r\n    const navigate = useNavigate()\r\n\r\n    const validateInputSignUp = async () => {\r\n        if(!name) {\r\n            setPopup({active: true, title: \"Oops!\", \r\n                message: \"Name can't be empty\"})\r\n            return false\r\n        }\r\n        if(!location) {\r\n            setPopup({active: true, title: \"Oops!\", \r\n                message: \"Location can't be empty\"})\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n\r\n    const addRestaurant = async(restaurant) => {\r\n        console.log(restaurant)\r\n        const response = await fetch(`http://localhost:8080/foodpanda/restaurants`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(restaurant)\r\n        })\r\n        \r\n        const data = await response.json()\r\n        if(data.success === true) {\r\n            setPopup({active: true, title: \"Yaay!\", \r\n                    message: data.message})\r\n            navigate('/admin/main-page', {\r\n                state: {admin: admin, restaurant: restaurant}\r\n            })       \r\n        }\r\n        else \r\n            setPopup({active: true, title: \"Oops!\", \r\n                    message: data.message})\r\n    }\r\n\r\n    const onAddRestaurantClick = async (e) => {\r\n        e.preventDefault()\r\n        \r\n        let notEmpty = await validateInputSignUp()\r\n        if (notEmpty) { \r\n            var checkboxes = document.querySelectorAll('input[type=checkbox]:checked')\r\n        \r\n            for (var i = 0; i < checkboxes.length; i++) {\r\n                deliveryZonesStrings.push(checkboxes[i].value)\r\n            }\r\n            addRestaurant({\"name\":name, \"location\":location, \"deliveryZonesStrings\":deliveryZonesStrings, \"adminUsername\":admin.username})\r\n        }    \r\n    }\r\n\r\n    return (\r\n        <div className=\"add-restaurant-page\">\r\n            <HeaderAdmin/>\r\n            <div className='add-restaurant-texts'>\r\n                <p>Add the restaurant you will manage:</p>\r\n            </div>\r\n            <form className=\"add-restaurant-form\">\r\n                <div className=\"restaurant-data\">\r\n                    <label className=\"restaurant-data-label\">Name:</label>\r\n                    <input\r\n                        className=\"restaurant-data-input\" \r\n                        type=\"text\" \r\n                        placeholder=\"Name\"\r\n                        value={name} \r\n                        onChange={(e) => setName(e.target.value)} \r\n                    />\r\n                </div>\r\n                <div className=\"restaurant-data\">\r\n                    <label className=\"restaurant-data-label\">Location:</label>\r\n                    <input\r\n                    className=\"restaurant-data-input\" \r\n                        type=\"text\" \r\n                        placeholder=\"Location\"\r\n                        value={location} \r\n                        onChange={(e) => setLocation(e.target.value)} \r\n                    />\r\n                </div>\r\n\r\n                <div className='zones-list'>\r\n                    <br></br>\r\n                    <label className='restaurant-data-label'>Delivery Zones:</label>\r\n                    <br></br>\r\n                    {zones.map((zone) => (\r\n                        <DeliveryZone\r\n                            zoneName={zone}\r\n                        />\r\n                    ))}\r\n                </div>\r\n                <button \r\n                    className='btn' \r\n                    id='btn-add-restaurant' \r\n                    type='submit'\r\n                    onClick={(e) => onAddRestaurantClick(e)}\r\n                >\r\n                    Add Restaurant        \r\n                </button> \r\n            </form>\r\n            <Popup \r\n                trigger={popup.active}\r\n                setPopup={setPopup}\r\n                title={popup.title}\r\n                message={popup.message}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddRestaurantPage"]},"metadata":{},"sourceType":"module"}