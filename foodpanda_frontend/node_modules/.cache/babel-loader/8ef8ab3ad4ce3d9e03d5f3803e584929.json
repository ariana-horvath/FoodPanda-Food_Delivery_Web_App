{"ast":null,"code":"var _jsxFileName = \"D:\\\\facultate\\\\an 3\\\\sem 2 - UPM\\\\SD - UTCN\\\\assignments\\\\assignment2\\\\foodpanda_frontend\\\\src\\\\components\\\\AddRestaurantPage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport \"./../css/AddRestaurantPage.css\";\nimport HeaderAdmin from \"./HeaderAdmin\";\nimport { useState } from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport DeliveryZone from './DeliveryZone';\nimport Popup from \"./Popup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddRestaurantPage = () => {\n  _s();\n\n  const {\n    state\n  } = useLocation();\n  const admin = state.admin;\n  const zones = state.zones;\n  console.log(zones);\n  const [name, setName] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [checked, setChecked] = useState([]);\n  const [popup, setPopup] = useState({\n    active: false,\n    title: \"\",\n    message: \"\"\n  });\n  const [deliveryZonesStrings, setDeliveryZonesStrings] = useState([]);\n\n  const validateInputSignUp = async () => {\n    if (!name) {\n      setPopup({\n        active: true,\n        title: \"Oops!\",\n        message: \"Name can't be empty\"\n      });\n      return false;\n    }\n\n    if (!location) {\n      setPopup({\n        active: true,\n        title: \"Oops!\",\n        message: \"Location can't be empty\"\n      });\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleCheck = e => {\n    var updatedList = [...checked];\n\n    if (e.target.checked) {\n      updatedList = [...checked, e.target.value];\n    } else {\n      updatedList.splice(checked.indexOf(e.target.value), 1);\n    }\n\n    setChecked(updatedList);\n  };\n\n  const checkedItems = checked.length ? checked.reduce(name => {\n    return name + \", \";\n  }) : \"\";\n\n  const addRestaurant = async restaurant => {\n    document.getElementById('zones').onclick = function () {\n      var checkboxes = document.querySelectorAll('input[type=\"checkbox\"]:checked');\n\n      for (var checkbox of checkboxes) {\n        // document.body.append(checkbox.value + ' ');\n        restaurant.deliveryZonesStrings.append(checkbox.value);\n      }\n    };\n\n    const response = await fetch(`http://localhost:8080/foodpanda/restaurants`, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(restaurant)\n    });\n    const data = await response.json();\n\n    if (data.success === true) {\n      setPopup({\n        active: true,\n        title: \"Yaay!\",\n        message: data.message\n      });\n    } else setPopup({\n      active: true,\n      title: \"Oops!\",\n      message: data.message\n    });\n  };\n\n  const onAddRestaurantClick = async e => {\n    e.preventDefault();\n    let notEmpty = await validateInputSignUp();\n\n    if (notEmpty) {\n      addRestaurant({\n        \"name\": name,\n        \"location\": location,\n        \"deliveryZonesStrings\": deliveryZonesStrings,\n        \"adminUsername\": admin.username\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-restaurant-page\",\n    children: [/*#__PURE__*/_jsxDEV(HeaderAdmin, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-restaurant-texts\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Add the restaurant you will manage:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"add-restaurant-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"restaurant-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"restaurant-data-label\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"restaurant-data-input\",\n          type: \"text\",\n          placeholder: \"Name\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"restaurant-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"restaurant-data-label\",\n          children: \"Location:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"restaurant-data-input\",\n          type: \"text\",\n          placeholder: \"Location\",\n          value: location,\n          onChange: e => setLocation(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"zones-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"restaurant-data-label\",\n          children: \"Delivery Zones:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), zones.map(zone => /*#__PURE__*/_jsxDEV(DeliveryZone, {\n          zoneName: zone,\n          handleCheck: handleCheck\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        id: \"btn-add-restaurant\",\n        type: \"submit\",\n        onClick: e => onAddRestaurantClick(e),\n        children: \"Add Restaurant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      trigger: popup.active,\n      setPopup: setPopup,\n      title: popup.title,\n      message: popup.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddRestaurantPage, \"jUQqHOtHlucUJXruy/Bd3JTfE7k=\", false, function () {\n  return [useLocation];\n});\n\n_c = AddRestaurantPage;\nexport default AddRestaurantPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRestaurantPage\");","map":{"version":3,"sources":["D:/facultate/an 3/sem 2 - UPM/SD - UTCN/assignments/assignment2/foodpanda_frontend/src/components/AddRestaurantPage.js"],"names":["React","HeaderAdmin","useState","useLocation","DeliveryZone","Popup","AddRestaurantPage","state","admin","zones","console","log","name","setName","location","setLocation","checked","setChecked","popup","setPopup","active","title","message","deliveryZonesStrings","setDeliveryZonesStrings","validateInputSignUp","handleCheck","e","updatedList","target","value","splice","indexOf","checkedItems","length","reduce","addRestaurant","restaurant","document","getElementById","onclick","checkboxes","querySelectorAll","checkbox","append","response","fetch","method","headers","body","JSON","stringify","data","json","success","onAddRestaurantClick","preventDefault","notEmpty","username","map","zone"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport \"./../css/AddRestaurantPage.css\"; \r\nimport HeaderAdmin from \"./HeaderAdmin\";\r\nimport { useState } from 'react'\r\nimport {useLocation} from \"react-router-dom\"\r\nimport DeliveryZone from './DeliveryZone';\r\nimport Popup from \"./Popup\";\r\n\r\nconst AddRestaurantPage = () => {\r\n    const {state} = useLocation()\r\n    const admin = state.admin\r\n    const zones = state.zones\r\n    console.log(zones)\r\n    const [name, setName] = useState(\"\")\r\n    const [location, setLocation] = useState(\"\")\r\n    const [checked, setChecked] = useState([])\r\n    const [popup, setPopup] = useState({active: false, title: \"\", message: \"\"});\r\n    const [deliveryZonesStrings, setDeliveryZonesStrings] = useState([])\r\n\r\n    const validateInputSignUp = async () => {\r\n        if(!name) {\r\n            setPopup({active: true, title: \"Oops!\", \r\n                message: \"Name can't be empty\"})\r\n            return false\r\n        }\r\n        if(!location) {\r\n            setPopup({active: true, title: \"Oops!\", \r\n                message: \"Location can't be empty\"})\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n\r\n    const handleCheck = (e) => {\r\n        var updatedList = [...checked];\r\n        if (e.target.checked) {\r\n          updatedList = [...checked, e.target.value];\r\n        } else {\r\n          updatedList.splice(checked.indexOf(e.target.value), 1);\r\n        }\r\n\r\n        setChecked(updatedList);\r\n    }\r\n\r\n    const checkedItems = checked.length\r\n    ? checked.reduce((name) => {\r\n        return name + \", \";\r\n      })\r\n    : \"\";\r\n\r\n    const addRestaurant = async(restaurant) => {\r\n\r\n        document.getElementById('zones').onclick = function() {\r\n            var checkboxes = document.querySelectorAll('input[type=\"checkbox\"]:checked');\r\n            for (var checkbox of checkboxes) {\r\n                // document.body.append(checkbox.value + ' ');\r\n                restaurant.deliveryZonesStrings.append(checkbox.value)\r\n            }\r\n        }\r\n\r\n        const response = await fetch(`http://localhost:8080/foodpanda/restaurants`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(restaurant)\r\n        })\r\n        const data = await response.json()\r\n        if(data.success === true) {\r\n            setPopup({active: true, title: \"Yaay!\", \r\n                    message: data.message})\r\n        }\r\n        else \r\n            setPopup({active: true, title: \"Oops!\", \r\n                    message: data.message})\r\n    }\r\n\r\n    const onAddRestaurantClick = async (e) => {\r\n        e.preventDefault()\r\n        \r\n        let notEmpty = await validateInputSignUp()\r\n        if (notEmpty) { \r\n            addRestaurant({\"name\":name, \"location\":location, \"deliveryZonesStrings\":deliveryZonesStrings, \"adminUsername\":admin.username})\r\n        }    \r\n    }\r\n\r\n    return (\r\n        <div className=\"add-restaurant-page\">\r\n            <HeaderAdmin/>\r\n            <div className='add-restaurant-texts'>\r\n                <p>Add the restaurant you will manage:</p>\r\n            </div>\r\n            <form className=\"add-restaurant-form\">\r\n                <div className=\"restaurant-data\">\r\n                    <label className=\"restaurant-data-label\">Name:</label>\r\n                    <input\r\n                        className=\"restaurant-data-input\" \r\n                        type=\"text\" \r\n                        placeholder=\"Name\"\r\n                        value={name} \r\n                        onChange={(e) => setName(e.target.value)} \r\n                    />\r\n                </div>\r\n                <div className=\"restaurant-data\">\r\n                    <label className=\"restaurant-data-label\">Location:</label>\r\n                    <input\r\n                    className=\"restaurant-data-input\" \r\n                        type=\"text\" \r\n                        placeholder=\"Location\"\r\n                        value={location} \r\n                        onChange={(e) => setLocation(e.target.value)} \r\n                    />\r\n                </div>\r\n\r\n                <div className='zones-list'>\r\n                    <br></br>\r\n                    <label className='restaurant-data-label'>Delivery Zones:</label>\r\n                    <br></br>\r\n                    {zones.map((zone) => (\r\n                        <DeliveryZone\r\n                            zoneName={zone}\r\n                            handleCheck={handleCheck}\r\n                        />\r\n                    ))}\r\n                </div>\r\n                <button \r\n                    className='btn' \r\n                    id='btn-add-restaurant' \r\n                    type='submit'\r\n                    onClick={(e) => onAddRestaurantClick(e)}\r\n                >\r\n                    Add Restaurant        \r\n                </button> \r\n            </form>\r\n            <Popup \r\n                trigger={popup.active}\r\n                setPopup={setPopup}\r\n                title={popup.title}\r\n                message={popup.message}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddRestaurantPage"]},"metadata":{},"sourceType":"module"}