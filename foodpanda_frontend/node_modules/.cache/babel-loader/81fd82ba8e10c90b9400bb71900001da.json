{"ast":null,"code":"var _jsxFileName = \"D:\\\\facultate\\\\an 3\\\\sem 2 - UPM\\\\SD - UTCN\\\\assignments\\\\assignment2\\\\foodpanda_frontend\\\\src\\\\components\\\\AddFoodPage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport \"./../css/AddFoodPage.css\";\nimport HeaderAdmin from \"./HeaderAdmin\";\nimport { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport Popup from \"./Popup\";\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddFoodPage = () => {\n  _s();\n\n  const {\n    state\n  } = useLocation();\n  const admin = state.admin;\n  const restaurant = state.restaurant;\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [price, setPrice] = useState(0.0);\n  const [popup, setPopup] = useState({\n    active: false,\n    title: \"\",\n    message: \"\"\n  });\n  const [categories, setCategories] = useState([]);\n  const navigate = useNavigate();\n  const [category, setCategory] = useState(\"\");\n  const defaultOption = 'Select category from existent';\n\n  const fetchCategories = async () => {\n    const response = await fetch(`http://localhost:8080/foodpanda/categories`);\n    const data = await response.json();\n    return data;\n  };\n\n  useEffect(() => {\n    const getCategories = async () => {\n      const categoriesNames = await fetchCategories();\n      setCategories(categoriesNames);\n    };\n\n    getCategories();\n  }, []);\n\n  const validateInputSignUp = async () => {\n    if (!name) {\n      setPopup({\n        active: true,\n        title: \"Oops!\",\n        message: \"Name can't be empty\"\n      });\n      return false;\n    }\n\n    if (!description) {\n      setPopup({\n        active: true,\n        title: \"Oops!\",\n        message: \"Description can't be empty\"\n      });\n      return false;\n    }\n\n    if (!price) {\n      setPopup({\n        active: true,\n        title: \"Oops!\",\n        message: \"Price can't be empty\"\n      });\n      return false;\n    }\n\n    return true;\n  };\n\n  const addFood = async food => {\n    console.log(food);\n    const response = await fetch(`http://localhost:8080/foodpanda/foods`, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(food)\n    });\n    const data = await response.json();\n\n    if (data.success === true) {\n      setPopup({\n        active: true,\n        title: \"Yaay!\",\n        message: data.message\n      });\n    } else setPopup({\n      active: true,\n      title: \"Oops!\",\n      message: data.message\n    });\n  };\n\n  const onAddFoodClick = async e => {\n    e.preventDefault();\n    let notEmpty = await validateInputSignUp();\n\n    if (notEmpty) {\n      console.log(restaurant);\n      addFood({\n        \"name\": name,\n        \"description\": description,\n        \"price\": price,\n        \"category\": category,\n        \"restaurant\": restaurant.name\n      });\n    }\n  };\n\n  const handleSelect = e => {\n    setCategory(e.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-food-page\",\n    children: [/*#__PURE__*/_jsxDEV(HeaderAdmin, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-food-texts\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select the category and add the foods:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"add-food-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"food-data-label\",\n        children: \"Category:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        options: categories.map(category => category.name),\n        onChange: handleSelect,\n        value: defaultOption,\n        placeholder: \"Select a category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"food-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"food-data-label\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"food-data-input\",\n          type: \"text\",\n          placeholder: \"Name\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"food-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"food-data-label\",\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"food-data-input\",\n          type: \"text\",\n          placeholder: \"Description\",\n          value: description,\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"food-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"food-data-label\",\n          children: \"Price:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"food-data-input\",\n          type: \"text\",\n          placeholder: \"Price\",\n          value: price,\n          onChange: e => setPrice(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        id: \"btn-add-food\",\n        type: \"submit\",\n        onClick: e => onAddFoodClick(e),\n        children: \"Add Food\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      trigger: popup.active,\n      setPopup: setPopup,\n      title: popup.title,\n      message: popup.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddFoodPage, \"a7kBVMr1pjJOzmVv+Pi0n/p9S9A=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = AddFoodPage;\nexport default AddFoodPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddFoodPage\");","map":{"version":3,"sources":["D:/facultate/an 3/sem 2 - UPM/SD - UTCN/assignments/assignment2/foodpanda_frontend/src/components/AddFoodPage.js"],"names":["React","HeaderAdmin","useState","useEffect","useLocation","useNavigate","Popup","Dropdown","AddFoodPage","state","admin","restaurant","name","setName","description","setDescription","price","setPrice","popup","setPopup","active","title","message","categories","setCategories","navigate","category","setCategory","defaultOption","fetchCategories","response","fetch","data","json","getCategories","categoriesNames","validateInputSignUp","addFood","food","console","log","method","headers","body","JSON","stringify","success","onAddFoodClick","e","preventDefault","notEmpty","handleSelect","value","map","target"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport \"./../css/AddFoodPage.css\"; \r\nimport HeaderAdmin from \"./HeaderAdmin\";\r\nimport { useState, useEffect } from 'react'\r\nimport {useLocation, useNavigate} from \"react-router-dom\"\r\nimport Popup from \"./Popup\";\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\n\r\nconst AddFoodPage = () => {\r\n    const {state} = useLocation()\r\n    const admin = state.admin\r\n    const restaurant = state.restaurant\r\n    const [name, setName] = useState(\"\")\r\n    const [description, setDescription] = useState(\"\")\r\n    const [price, setPrice] = useState(0.0)\r\n    const [popup, setPopup] = useState({active: false, title: \"\", message: \"\"});\r\n    const [categories, setCategories] = useState([])\r\n    const navigate = useNavigate()\r\n    const [category, setCategory] = useState(\"\")\r\n    const defaultOption = 'Select category from existent'\r\n\r\n    const fetchCategories= async () => {\r\n        const response = await fetch(`http://localhost:8080/foodpanda/categories`)\r\n        const data = await response.json()\r\n        return data\r\n    }\r\n    \r\n    useEffect(() => {\r\n        const getCategories = async () => {\r\n            const categoriesNames = await fetchCategories()\r\n            setCategories(categoriesNames)\r\n        }\r\n    \r\n        getCategories()\r\n    }, [])\r\n\r\n    const validateInputSignUp = async () => {\r\n        if(!name) {\r\n            setPopup({active: true, title: \"Oops!\", \r\n                message: \"Name can't be empty\"})\r\n            return false\r\n        }\r\n        if(!description) {\r\n            setPopup({active: true, title: \"Oops!\", \r\n                message: \"Description can't be empty\"})\r\n            return false\r\n        }\r\n        if(!price) {\r\n            setPopup({active: true, title: \"Oops!\", \r\n                message: \"Price can't be empty\"})\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n\r\n    const addFood = async(food) => {\r\n        console.log(food)\r\n        const response = await fetch(`http://localhost:8080/foodpanda/foods`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(food)\r\n        })\r\n        \r\n        const data = await response.json()\r\n        if(data.success === true) {\r\n            setPopup({active: true, title: \"Yaay!\", \r\n                    message: data.message})   \r\n        }\r\n        else \r\n            setPopup({active: true, title: \"Oops!\", \r\n                    message: data.message})\r\n    }\r\n\r\n    const onAddFoodClick = async (e) => {\r\n        e.preventDefault()\r\n        \r\n        let notEmpty = await validateInputSignUp()\r\n        if (notEmpty) { \r\n            console.log(restaurant)\r\n            addFood({\"name\":name, \"description\":description, \"price\":price, \"category\":category, \"restaurant\":restaurant.name})\r\n        }    \r\n    }\r\n\r\n    const handleSelect = (e) => {\r\n        setCategory(e.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"add-food-page\">\r\n            <HeaderAdmin/>\r\n            <div className='add-food-texts'>\r\n                <p>Select the category and add the foods:</p>\r\n            </div>\r\n            <form className=\"add-food-form\">\r\n                <label className=\"food-data-label\">Category:</label>\r\n                <Dropdown options={categories.map((category) => (category.name))} onChange = {handleSelect}  \r\n                                    value={defaultOption} placeholder=\"Select a category\"></Dropdown>\r\n                \r\n                <br></br>\r\n                <div className=\"food-data\">\r\n                    <label className=\"food-data-label\">Name:</label>\r\n                    <input\r\n                        className=\"food-data-input\" \r\n                        type=\"text\" \r\n                        placeholder=\"Name\"\r\n                        value={name} \r\n                        onChange={(e) => setName(e.target.value)} \r\n                    />\r\n                </div>\r\n                <div className=\"food-data\">\r\n                    <label className=\"food-data-label\">Description:</label>\r\n                    <input\r\n                    className=\"food-data-input\" \r\n                        type=\"text\" \r\n                        placeholder=\"Description\"\r\n                        value={description} \r\n                        onChange={(e) => setDescription(e.target.value)} \r\n                    />\r\n                </div>\r\n                <div className=\"food-data\">\r\n                    <label className=\"food-data-label\">Price:</label>\r\n                    <input\r\n                    className=\"food-data-input\" \r\n                        type=\"text\" \r\n                        placeholder=\"Price\"\r\n                        value={price} \r\n                        onChange={(e) => setPrice(e.target.value)} \r\n                    />\r\n                </div>\r\n                \r\n                <button \r\n                    className='btn' \r\n                    id='btn-add-food' \r\n                    type='submit'\r\n                    onClick={(e) => onAddFoodClick(e)}\r\n                >\r\n                    Add Food        \r\n                </button> \r\n            </form>\r\n            <Popup \r\n                trigger={popup.active}\r\n                setPopup={setPopup}\r\n                title={popup.title}\r\n                message={popup.message}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddFoodPage"]},"metadata":{},"sourceType":"module"}