[{"D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\index.js":"1","D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\reportWebVitals.js":"2","D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\App.js":"3","D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\Popup.js":"4","D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\LogInCustomerPage.js":"5","D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\WelcomePage.js":"6","D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\LogInAdminPage.js":"7","D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\AdminMainPage.js":"8","D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\HeaderAdmin.js":"9","D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\AddRestaurantPage.js":"10","D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\DeliveryZone.js":"11","D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\AddFoodPage.js":"12","D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\MenuItem.js":"13","D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\FoodItem.js":"14","D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\CustomerMainPage.js":"15","D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\HeaderCustomer.js":"16","D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\Restaurant.js":"17","D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\RestaurantMenuPage.js":"18","D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\MenuItem2.js":"19","D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\FoodItem2.js":"20","D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\Cart.js":"21","D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\FoodItem3.js":"22","D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\OrdersAdminPage.js":"23","D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\OrderItem.js":"24","D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\OrdersCustomerPage.js":"25","D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\OrderItemCustomer.js":"26"},{"size":500,"mtime":1649538956036,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":1649807726202,"results":"29","hashOfConfig":"28"},{"size":1675,"mtime":1652055227697,"results":"30","hashOfConfig":"28"},{"size":559,"mtime":1649768176270,"results":"31","hashOfConfig":"28"},{"size":4819,"mtime":1649863376043,"results":"32","hashOfConfig":"28"},{"size":1407,"mtime":1649768177068,"results":"33","hashOfConfig":"28"},{"size":4176,"mtime":1649810516345,"results":"34","hashOfConfig":"28"},{"size":1728,"mtime":1652105283274,"results":"35","hashOfConfig":"28"},{"size":2789,"mtime":1649896922337,"results":"36","hashOfConfig":"28"},{"size":4637,"mtime":1649810286426,"results":"37","hashOfConfig":"28"},{"size":347,"mtime":1649783575478,"results":"38","hashOfConfig":"28"},{"size":5649,"mtime":1649824863766,"results":"39","hashOfConfig":"28"},{"size":488,"mtime":1649820969046,"results":"40","hashOfConfig":"28"},{"size":582,"mtime":1649882786622,"results":"41","hashOfConfig":"28"},{"size":2888,"mtime":1649894092510,"results":"42","hashOfConfig":"28"},{"size":2779,"mtime":1649907502668,"results":"43","hashOfConfig":"28"},{"size":1038,"mtime":1649869804694,"results":"44","hashOfConfig":"28"},{"size":1827,"mtime":1649890285068,"results":"45","hashOfConfig":"28"},{"size":591,"mtime":1649890074148,"results":"46","hashOfConfig":"28"},{"size":1070,"mtime":1649893841561,"results":"47","hashOfConfig":"28"},{"size":4073,"mtime":1652216374962,"results":"48","hashOfConfig":"28"},{"size":541,"mtime":1649892962072,"results":"49","hashOfConfig":"28"},{"size":2393,"mtime":1649904189835,"results":"50","hashOfConfig":"28"},{"size":3420,"mtime":1649904072350,"results":"51","hashOfConfig":"28"},{"size":1530,"mtime":1649907194044,"results":"52","hashOfConfig":"28"},{"size":1142,"mtime":1649906747725,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"1x9q1c",{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"57"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"57"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"57"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"57"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"57"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"57"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"57"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"57"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\index.js",[],[],[],"D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\reportWebVitals.js",[],[],"D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\App.js",[],[],"D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\Popup.js",[],[],"D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\LogInCustomerPage.js",[],[],"D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\WelcomePage.js",["141","142"],[],"import { Navigate, useNavigate } from \"react-router-dom\"\r\nimport { useState } from \"react\";\r\nimport \"./../css/WelcomePage.css\"; \r\n\r\nconst WelcomePage = () => {\r\n    const navigate = useNavigate()\r\n    \r\n    const onCustomerClick = async (e) => {\r\n        e.preventDefault()\r\n        navigate(\"/customer\")\r\n    }\r\n\r\n    const onAdminClick = async (e) => {\r\n        e.preventDefault()\r\n        navigate(\"/admin\")\r\n    }\r\n\r\n    return(\r\n        <div className='welcome-page'>\r\n            <div className='welcome-texts'>\r\n                <img className='logo-welcome-page' alt='This is a logo'/>\r\n                <p className='logo-text-welcome-page'>Food Panda</p>\r\n                {/* <p className='motto'>Learning as easy as i = 0;</p> */}\r\n            </div>\r\n            <form className=\"welcome-form\">\r\n                <button \r\n                    className='btn' \r\n                    id='btn-customer' \r\n                    type='submit'\r\n                    onClick={(e) => onCustomerClick(e)}\r\n                >\r\n                    I'm a customer        \r\n                </button>  \r\n                <button \r\n                    className='btn' \r\n                    id='btn-admin' \r\n                    onClick={(e) => onAdminClick(e)}\r\n                >\r\n                    I'm an admin       \r\n                </button>\r\n            </form>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default WelcomePage","D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\LogInAdminPage.js",[],[],"D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\AdminMainPage.js",["143"],[],"import React from 'react'\r\nimport ReactToPrint from 'react-to-print';\r\nimport \"./../css/AdminMainPage.css\"; \r\nimport HeaderAdmin from \"./HeaderAdmin\";\r\nimport { useState, useEffect } from 'react'\r\nimport {useLocation} from \"react-router-dom\"\r\nimport MenuItem from './MenuItem';\r\n\r\nconst AdminMainPage = () => {\r\n    const {state} = useLocation()\r\n    const admin = state.admin\r\n    const restaurant = state.restaurant\r\n    const [menuItems, setMenuItems] = useState([])\r\n    var componentRef\r\n    \r\n    const fetchMenuItems = async () => {\r\n        const response = await fetch(`http://localhost:8080/foodpanda/foods/${restaurant}`)\r\n        const data = await response.json()\r\n        console.log(data)\r\n        return data\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getMenuItems = async () => {\r\n            const menuItemsResponse = await fetchMenuItems()\r\n            setMenuItems(menuItemsResponse)\r\n        }\r\n    \r\n        getMenuItems()\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"main-admin-page\">\r\n            <HeaderAdmin admin={admin} restaurant={restaurant}/>\r\n            <label className='restaurant-title'>{restaurant}</label>\r\n            <label className='menu-label'>Menu</label>\r\n            <div ref={(response) => (componentRef = response)} className = 'container' id='menu'>\r\n                {menuItems.map((menuItem) => (\r\n                    <MenuItem \r\n                        menuItem={menuItem}\r\n                    />\r\n                ))}\r\n            </div>\r\n            <ReactToPrint\r\n            content={() => componentRef}\r\n            trigger={() => <button className=\"btn-save-pdf\">Export as PDF</button>}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminMainPage","D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\HeaderAdmin.js",[],[],"D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\AddRestaurantPage.js",["144"],[],"import React from 'react'\r\nimport \"./../css/AddRestaurantPage.css\"; \r\nimport HeaderAdmin from \"./HeaderAdmin\";\r\nimport { useState } from 'react'\r\nimport {useLocation, useNavigate} from \"react-router-dom\"\r\nimport DeliveryZone from './DeliveryZone';\r\nimport Popup from \"./Popup\";\r\n\r\nconst AddRestaurantPage = () => {\r\n    const {state} = useLocation()\r\n    const admin = state.admin\r\n    const zones = state.zones\r\n    const [name, setName] = useState(\"\")\r\n    const [location, setLocation] = useState(\"\")\r\n    const [popup, setPopup] = useState({active: false, title: \"\", message: \"\"});\r\n    const [deliveryZonesStrings, setDeliveryZonesStrings] = useState([])\r\n    const navigate = useNavigate()\r\n\r\n    const validateInputSignUp = async () => {\r\n        if(!name) {\r\n            setPopup({active: true, title: \"Oops!\", \r\n                message: \"Name can't be empty\"})\r\n            return false\r\n        }\r\n        if(!location) {\r\n            setPopup({active: true, title: \"Oops!\", \r\n                message: \"Location can't be empty\"})\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n\r\n    const addRestaurant = async(restaurant) => {\r\n        console.log(restaurant)\r\n        const response = await fetch(`http://localhost:8080/foodpanda/restaurants`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(restaurant)\r\n        })\r\n        \r\n        const data = await response.json()\r\n        if(data.success === true) {\r\n            setPopup({active: true, title: \"Yaay!\", \r\n                    message: data.message})\r\n            navigate('/admin/main-page', {\r\n                state: {admin: admin, restaurant: restaurant}\r\n            })       \r\n        }\r\n        else \r\n            setPopup({active: true, title: \"Oops!\", \r\n                    message: data.message})\r\n    }\r\n\r\n    const onAddRestaurantClick = async (e) => {\r\n        e.preventDefault()\r\n        \r\n        let notEmpty = await validateInputSignUp()\r\n        if (notEmpty) { \r\n            var checkboxes = document.querySelectorAll('input[type=checkbox]:checked')\r\n        \r\n            for (var i = 0; i < checkboxes.length; i++) {\r\n                deliveryZonesStrings.push(checkboxes[i].value)\r\n            }\r\n            addRestaurant({\"name\":name, \"location\":location, \"deliveryZonesStrings\":deliveryZonesStrings, \"adminUsername\":admin.username})\r\n        }    \r\n    }\r\n\r\n    return (\r\n        <div className=\"add-restaurant-page\">\r\n            <HeaderAdmin/>\r\n            <div className='add-restaurant-texts'>\r\n                <p>Add the restaurant you will manage:</p>\r\n            </div>\r\n            <form className=\"add-restaurant-form\">\r\n                <div className=\"restaurant-data\">\r\n                    <label className=\"restaurant-data-label\">Name:</label>\r\n                    <input\r\n                        className=\"restaurant-data-input\" \r\n                        type=\"text\" \r\n                        placeholder=\"Name\"\r\n                        value={name} \r\n                        onChange={(e) => setName(e.target.value)} \r\n                    />\r\n                </div>\r\n                <div className=\"restaurant-data\">\r\n                    <label className=\"restaurant-data-label\">Location:</label>\r\n                    <input\r\n                    className=\"restaurant-data-input\" \r\n                        type=\"text\" \r\n                        placeholder=\"Location\"\r\n                        value={location} \r\n                        onChange={(e) => setLocation(e.target.value)} \r\n                    />\r\n                </div>\r\n\r\n                <div className='zones-list'>\r\n                    <br></br>\r\n                    <label className='restaurant-data-label'>Delivery Zones:</label>\r\n                    <br></br>\r\n                    {zones.map((zone) => (\r\n                        <DeliveryZone\r\n                            zoneName={zone}\r\n                        />\r\n                    ))}\r\n                </div>\r\n                <button \r\n                    className='btn' \r\n                    id='btn-add-restaurant' \r\n                    type='submit'\r\n                    onClick={(e) => onAddRestaurantClick(e)}\r\n                >\r\n                    Add Restaurant        \r\n                </button> \r\n            </form>\r\n            <Popup \r\n                trigger={popup.active}\r\n                setPopup={setPopup}\r\n                title={popup.title}\r\n                message={popup.message}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddRestaurantPage","D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\DeliveryZone.js",[],[],"D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\AddFoodPage.js",["145"],[],"import React from 'react'\r\nimport \"./../css/AddFoodPage.css\"; \r\nimport HeaderAdmin from \"./HeaderAdmin\";\r\nimport { useState, useEffect } from 'react'\r\nimport {useLocation, useNavigate} from \"react-router-dom\"\r\nimport Popup from \"./Popup\";\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\n\r\nconst AddFoodPage = () => {\r\n    const {state} = useLocation()\r\n    const admin = state.admin\r\n    const restaurant = state.restaurant\r\n    const [name, setName] = useState(\"\")\r\n    const [description, setDescription] = useState(\"\")\r\n    const [price, setPrice] = useState(0.0)\r\n    const [popup, setPopup] = useState({active: false, title: \"\", message: \"\"});\r\n    const [categories, setCategories] = useState([])\r\n    const navigate = useNavigate()\r\n    const [category, setCategory] = useState(\"\")\r\n    const defaultOption = 'Select category from existent'\r\n\r\n    const fetchCategories = async () => {\r\n        const response = await fetch(`http://localhost:8080/foodpanda/categories`)\r\n        const data = await response.json()\r\n        return data\r\n    }\r\n    \r\n    useEffect(() => {\r\n        const getCategories = async () => {\r\n            const categoriesNames = await fetchCategories()\r\n            setCategories(categoriesNames)\r\n        }\r\n    \r\n        getCategories()\r\n    }, [])\r\n\r\n    const validateInputSignUp = async () => {\r\n        if(!name) {\r\n            setPopup({active: true, title: \"Oops!\", \r\n                message: \"Name can't be empty\"})\r\n            return false\r\n        }\r\n        if(!description) {\r\n            setPopup({active: true, title: \"Oops!\", \r\n                message: \"Description can't be empty\"})\r\n            return false\r\n        }\r\n        if(!price) {\r\n            setPopup({active: true, title: \"Oops!\", \r\n                message: \"Price can't be empty\"})\r\n            return false\r\n        }\r\n        if(isNaN(price)) {\r\n            setPopup({active: true, title: \"Oops!\", \r\n                message: \"Price has to be a number!\"})\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n\r\n    const addFood = async(food) => {\r\n        console.log(food)\r\n        const response = await fetch(`http://localhost:8080/foodpanda/foods`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(food)\r\n        })\r\n        \r\n        const data = await response.json()\r\n        if(data.success === true) {\r\n            setPopup({active: true, title: \"Yaay!\", \r\n                    message: data.message})   \r\n        }\r\n        else \r\n            setPopup({active: true, title: \"Oops!\", \r\n                    message: data.message})\r\n    }\r\n\r\n    const onAddFoodClick = async (e) => {\r\n        e.preventDefault()\r\n        \r\n        let notEmpty = await validateInputSignUp()\r\n        if (notEmpty) { \r\n            console.log(restaurant)\r\n            addFood({\"name\":name, \"description\":description, \"price\":price, \"category\":category, \"restaurant\":restaurant})\r\n        }    \r\n    }\r\n\r\n    const handleSelect = (e) => {\r\n        setCategory(e.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"add-food-page\">\r\n            <HeaderAdmin admin={admin} restaurant={restaurant}/>\r\n            <div className='add-food-texts'>\r\n                <p>Select the category and add the foods:</p>\r\n            </div>\r\n            <form className=\"add-food-form\">\r\n                <label className=\"food-data-label\">Category:</label>\r\n                <Dropdown options={categories.map((category) => (category.name))} onChange = {handleSelect}  \r\n                                    value={defaultOption} placeholder=\"Select a category\"></Dropdown>\r\n                \r\n                <br></br>\r\n                <div className=\"food-data\">\r\n                    <label className=\"food-data-label\">Name:</label>\r\n                    <input\r\n                        className=\"food-data-input\" \r\n                        type=\"text\" \r\n                        placeholder=\"Name\"\r\n                        value={name} \r\n                        onChange={(e) => setName(e.target.value)} \r\n                    />\r\n                </div>\r\n                <div className=\"food-data\">\r\n                    <label className=\"food-data-label\">Description:</label>\r\n                    <input\r\n                    className=\"food-data-input\" \r\n                        type=\"text\" \r\n                        placeholder=\"Description\"\r\n                        value={description} \r\n                        onChange={(e) => setDescription(e.target.value)} \r\n                    />\r\n                </div>\r\n                <div className=\"food-data\">\r\n                    <label className=\"food-data-label\">Price:</label>\r\n                    <input\r\n                    className=\"food-data-input\" \r\n                        type=\"text\" \r\n                        placeholder=\"Price\"\r\n                        value={price} \r\n                        onChange={(e) => setPrice(e.target.value)} \r\n                    />\r\n                </div>\r\n                \r\n                <button \r\n                    className='btn' \r\n                    id='btn-add-food' \r\n                    type='submit'\r\n                    onClick={(e) => onAddFoodClick(e)}\r\n                >\r\n                    Add Food        \r\n                </button> \r\n            </form>\r\n            <Popup \r\n                trigger={popup.active}\r\n                setPopup={setPopup}\r\n                title={popup.title}\r\n                message={popup.message}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddFoodPage","D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\MenuItem.js",[],[],"D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\FoodItem.js",[],[],"D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\CustomerMainPage.js",[],[],"D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\HeaderCustomer.js",[],[],"D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\Restaurant.js",[],[],"D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\RestaurantMenuPage.js",["146"],[],"import React from 'react'\r\nimport \"./../css/RestaurantMenuPage.css\"; \r\nimport HeaderCustomer from \"./HeaderCustomer\";\r\nimport { useState, useEffect } from 'react'\r\nimport {useLocation} from \"react-router-dom\"\r\nimport MenuItem2 from './MenuItem2';\r\n\r\nconst RestaurantMenuPage = () => {\r\n    const {state} = useLocation()\r\n    const customerName = state.customerName\r\n    const restaurant = state.restaurant\r\n    const [menuItems, setMenuItems] = useState([])\r\n    \r\n    var price = 0.0\r\n    var myFoods = []\r\n\r\n    var shoppingCart = {\r\n        customer:customerName,\r\n        restaurant:restaurant.name,\r\n        foods:myFoods,\r\n        price: price,\r\n        date: null,\r\n        time: null,\r\n        status: null,\r\n    }\r\n\r\n    const fetchMenuItems = async () => {\r\n        const response = await fetch(`http://localhost:8080/foodpanda/foods/${restaurant.name}`)\r\n        const data = await response.json()\r\n        return data\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getMenuItems = async () => {\r\n            const menuItemsResponse = await fetchMenuItems()\r\n            setMenuItems(menuItemsResponse)\r\n        }\r\n    \r\n        getMenuItems()\r\n    }, [])\r\n\r\n    console.log(shoppingCart)\r\n\r\n    return (\r\n        <div className=\"main-admin-page\">\r\n            <HeaderCustomer customerName={customerName} shoppingCart={shoppingCart}/>\r\n            <label className='restaurant-title'>{restaurant.name}</label>\r\n            <label className='menu-label'>Menu</label>\r\n\r\n            <div className = 'container'>\r\n                {menuItems.map((menuItem) => (\r\n                    <MenuItem2 \r\n                        menuItem={menuItem}\r\n                        shoppingCart={shoppingCart}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RestaurantMenuPage","D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\MenuItem2.js",[],[],"D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\FoodItem2.js",[],[],"D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\Cart.js",["147"],[],"D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\FoodItem3.js",[],[],"D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\OrdersAdminPage.js",["148","149"],[],"import React from 'react'\r\nimport \"./../css/OrdersAdminPage.css\"; \r\nimport HeaderAdmin from \"./HeaderAdmin\";\r\nimport { useState, useEffect } from 'react'\r\nimport {useLocation, useNavigate} from \"react-router-dom\"\r\nimport OrderItem from './OrderItem';\r\n\r\nconst OrdersAdminPage = () => {\r\n    const {state} = useLocation()\r\n    const admin = state.admin\r\n    const restaurant = state.restaurant\r\n    const [orders, setOrders] = useState([])\r\n    const [ordersCopy, setOrdersCopy] = useState([])\r\n    const [status, setStatus] = useState(\"\")\r\n\r\n    const fetchOrders = async () => {\r\n        const response = await fetch(`http://localhost:8080/foodpanda/orders-restaurant/${restaurant}`)\r\n        const data = await response.json()\r\n        return data\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getOrders = async () => {\r\n            const ordersResponse = await fetchOrders()\r\n            setOrders(ordersResponse)\r\n            setOrdersCopy(ordersResponse)\r\n        }\r\n    \r\n        getOrders()\r\n    }, [])\r\n\r\n    const onSearchClick = async(e) => {\r\n        e.preventDefault()     \r\n        const filteredOrders = orders.filter(order => status.toLocaleLowerCase().includes(order.status.toLowerCase()))\r\n        setOrdersCopy(filteredOrders)\r\n    }\r\n\r\n    return(\r\n        <div className=\"orders-admin-page\">\r\n            <HeaderAdmin admin={admin} restaurant={restaurant}/>\r\n            <label className='menu-label'>Orders</label>\r\n\r\n            <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"/>\r\n            <form class=\"searchbar2\" action=\"action_page.php\">\r\n                <button \r\n                    type=\"submit\"\r\n                    onClick={(e) => onSearchClick(e)}\r\n                ><i class=\"fa fa-search\"></i></button>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Filter by status...\" \r\n                    name=\"search\"\r\n                    value={status}\r\n                    onChangeCapture={(e) => setStatus(e.target.value)}\r\n                />    \r\n            </form>\r\n\r\n            <div className = 'container'>\r\n                {ordersCopy.map((order) => (\r\n                    <OrderItem \r\n                        order={order}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrdersAdminPage","D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\OrderItem.js",["150"],[],"import React from 'react'\r\nimport \"./../css/OrderItem.css\"; \r\n\r\nconst OrderItem = ({order}) => {\r\n    var pending = false\r\n    var status = \"PENDING\"\r\n    var declined = false\r\n    var delivered = false\r\n    \r\n    if (order.status === \"PENDING\")\r\n        pending = true\r\n    \r\n    if(order.status === \"DECLINED\")\r\n        declined = true\r\n\r\n    if(order.status === \"DELIVERED\")\r\n        delivered = true\r\n\r\n    const onChangeStatusClick = async(e) => {\r\n        e.preventDefault()     \r\n        if (order.status === \"ACCEPTED\") {\r\n            status = \"IN DELIVERY\"\r\n            changeStatus()\r\n        }\r\n        else {\r\n            if (order.status === \"IN DELIVERY\") {\r\n                status = \"DELIVERED\"\r\n                delivered = true\r\n                changeStatus()\r\n            }\r\n        }\r\n    }\r\n\r\n    const onAcceptClick = async(e) => {\r\n        e.preventDefault()\r\n        status = \"ACCEPTED\"\r\n        changeStatus()\r\n    }\r\n\r\n    const onDeclineClick = async(e) => {\r\n        e.preventDefault()     \r\n        status = \"DECLINED\"\r\n        changeStatus()\r\n    }\r\n\r\n    const changeStatus = async(e) => {\r\n        // e.preventDefault()     \r\n        console.log(status)\r\n        const response = await fetch(`http://localhost:8080/foodpanda/orders/${order.orderId}/${status}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(order)\r\n        })\r\n        window.location.reload(false);\r\n    }\r\n \r\n    return (\r\n        <ul className='order'>\r\n            <li className='order-component'>\r\n                <div>\r\n                    <h3>{\"Order id: \" + order.orderId}</h3>\r\n                    <p>{\"Customer: \" + order.customer}</p>\r\n                    <p>{order.date + \" \" + order.time}</p>\r\n                </div>\r\n            </li>\r\n            <li className='order-component'>\r\n                <div>\r\n                    {order.foods.map((food) => (\r\n                        food.name + \", \"   \r\n                    ))}\r\n                </div>\r\n            </li>\r\n            <li className='order-component'>\r\n                <h3 className='status-component'>{order.price + \" RON\"} </h3>\r\n            </li>\r\n            <li className='order-component'>\r\n                <div>\r\n                    <h3 className='status-component'>{order.status} </h3>\r\n                </div>\r\n            </li>\r\n            <li className='order-component'>\r\n                {pending &&\r\n                <div>\r\n                    <button \r\n                        className='btn-component-order'\r\n                        onClick={(e) => onAcceptClick(e)}\r\n                    >\r\n                        Accept\r\n                    </button>\r\n                    <button \r\n                        className='btn-component-order'\r\n                        onClick={(e) => onDeclineClick(e)}\r\n                    >\r\n                        Decline\r\n                    </button>\r\n                </div> \r\n                }\r\n                {(!pending && !declined && !delivered) &&\r\n                    <button \r\n                        className='btn-component-order'\r\n                        onClick={(e) => onChangeStatusClick(e)}\r\n                    >\r\n                        Change Status\r\n                    </button>\r\n                }\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default OrderItem","D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\OrdersCustomerPage.js",["151","152","153"],[],"import React from 'react'\r\nimport \"./../css/OrdersCustomerPage.css\"; \r\nimport HeaderCustomer from \"./HeaderCustomer\";\r\nimport { useState, useEffect } from 'react'\r\nimport {useLocation, useNavigate} from \"react-router-dom\"\r\nimport OrderItemCustomer from './OrderItemCustomer';\r\n\r\nconst OrdersCustomerPage = () => {\r\n    const {state} = useLocation()\r\n    const shoppingCart = state.shoppingCart\r\n    const customerName = state.customerName\r\n    const [orders, setOrders] = useState([])\r\n    const [ordersCopy, setOrdersCopy] = useState([])\r\n\r\n    const fetchOrders = async () => {\r\n        const response = await fetch(`http://localhost:8080/foodpanda/orders-customer/${customerName}`)\r\n        const data = await response.json()\r\n        return data\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getOrders = async () => {\r\n            const ordersResponse = await fetchOrders()\r\n            setOrders(ordersResponse)\r\n            setOrdersCopy(ordersResponse)\r\n        }\r\n    \r\n        getOrders()\r\n    }, [])\r\n\r\n    return(\r\n        <div className=\"orders-customer-page\">\r\n            <HeaderCustomer customerName={customerName} shoppingCart={shoppingCart}/>\r\n            <label className='order-customer-label'>My Orders</label>\r\n\r\n            <div className = 'container'>\r\n                {ordersCopy.map((order) => (\r\n                    <OrderItemCustomer \r\n                        order={order}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrdersCustomerPage","D:\\facultate\\an 3\\sem 2 - UPM\\SD - UTCN\\assignments\\assignment2\\foodpanda_frontend\\src\\components\\OrderItemCustomer.js",[],[],{"ruleId":"154","severity":1,"message":"155","line":1,"column":10,"nodeType":"156","messageId":"157","endLine":1,"endColumn":18},{"ruleId":"154","severity":1,"message":"158","line":2,"column":10,"nodeType":"156","messageId":"157","endLine":2,"endColumn":18},{"ruleId":"159","severity":1,"message":"160","line":30,"column":8,"nodeType":"161","endLine":30,"endColumn":10,"suggestions":"162"},{"ruleId":"154","severity":1,"message":"163","line":16,"column":34,"nodeType":"156","messageId":"157","endLine":16,"endColumn":57},{"ruleId":"154","severity":1,"message":"164","line":19,"column":11,"nodeType":"156","messageId":"157","endLine":19,"endColumn":19},{"ruleId":"159","severity":1,"message":"160","line":40,"column":8,"nodeType":"161","endLine":40,"endColumn":10,"suggestions":"165"},{"ruleId":"154","severity":1,"message":"166","line":7,"column":20,"nodeType":"156","messageId":"157","endLine":7,"endColumn":26},{"ruleId":"154","severity":1,"message":"167","line":5,"column":22,"nodeType":"156","messageId":"157","endLine":5,"endColumn":33},{"ruleId":"159","severity":1,"message":"168","line":30,"column":8,"nodeType":"161","endLine":30,"endColumn":10,"suggestions":"169"},{"ruleId":"154","severity":1,"message":"170","line":49,"column":15,"nodeType":"156","messageId":"157","endLine":49,"endColumn":23},{"ruleId":"154","severity":1,"message":"167","line":5,"column":22,"nodeType":"156","messageId":"157","endLine":5,"endColumn":33},{"ruleId":"154","severity":1,"message":"171","line":12,"column":12,"nodeType":"156","messageId":"157","endLine":12,"endColumn":18},{"ruleId":"159","severity":1,"message":"168","line":29,"column":8,"nodeType":"161","endLine":29,"endColumn":10,"suggestions":"172"},"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchMenuItems'. Either include it or remove the dependency array.","ArrayExpression",["173"],"'setDeliveryZonesStrings' is assigned a value but never used.","'navigate' is assigned a value but never used.",["174"],"'useRef' is defined but never used.","'useNavigate' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchOrders'. Either include it or remove the dependency array.",["175"],"'response' is assigned a value but never used.","'orders' is assigned a value but never used.",["176"],{"desc":"177","fix":"178"},{"desc":"177","fix":"179"},{"desc":"180","fix":"181"},{"desc":"180","fix":"182"},"Update the dependencies array to be: [fetchMenuItems]",{"range":"183","text":"184"},{"range":"185","text":"184"},"Update the dependencies array to be: [fetchOrders]",{"range":"186","text":"187"},{"range":"188","text":"187"},[957,959],"[fetchMenuItems]",[1162,1164],[1007,1009],"[fetchOrders]",[1007,1009]]